@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

@function px-to-rem($size, $base: $font-size-base) {
  @return (strip-units($size) / strip-units($base)) + rem;
}

@function rem-to-px($size, $base: $font-size-base) {
  @return (strip-units($size) * strip-units($base)) + px;
}

@mixin px_and_rem_directive($size, $css-directive) {
  $size_unit: to-lower-case(unit($size));
  @if $size_unit == 'px' {
    #{$css-directive}: $size;
    #{$css-directive}: px-to-rem($size);
  }
  @if $size_unit == 'rem' {
    #{$css-directive}: rem-to-px($size);
    #{$css-directive}: $size;
  } 

  @if unitless($size) {
    #{$css-directive}: $size + px;
    #{$css-directive}: px-to-rem($size);
  }

}
@mixin font-size($size) {
  @include px_and_rem_directive($size, 'font-size');
}


@mixin figure($image-path, $width, $height, $scale_factor:1) {
  max-width: $width;
  figure {
    padding-top: strip-units($height / $width) * 100%;
    background: image-url($image-path);
  }
}

/* Resize sprites http://stackoverflow.com/a/14133418 */
@mixin resize-sprite($map, $sprite, $percent) {
  $spritePath:    sprite-path($map);
  $spriteWidth:   image-width($spritePath);
  $spriteHeight:  image-height($spritePath);
  $width: image-width(sprite-file($map, $sprite));
  $height: image-height(sprite-file($map, $sprite));

  @include background-size(ceil($spriteWidth * ($percent/100)) ceil($spriteHeight * ($percent/100)));
  width: ceil($width*($percent/100));
  height: ceil($height*($percent/100));
  background-position: 0 floor(nth(sprite-position($map, $sprite), 2)  * ($percent/100) );
}


.ul-reset {
  list-style-type: none !important;
}

.clearfix {
  clear: both;
}

.text-smart-wrap {
  @media (min-width: 500px) { 
    white-space: nowrap;
  }
}

.green { color: $green; }
